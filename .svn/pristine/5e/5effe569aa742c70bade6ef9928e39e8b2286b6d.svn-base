package org.zerock.data.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.zerock.board.dto.Criteria;
import org.zerock.data.dao.DataDAO;
import org.zerock.data.dto.DataDTO;

@Service
public class DataServiceImpl implements DataService {

	@Inject
	private DataDAO dao;
	
	// 자료실 리스트
	public List<DataDTO> list(Criteria cri) {
		System.out.println(getClass().getSimpleName()+".list()");
		// 페이지에 대한 계산을 한다.
		cri.setTotalCount(dao.getTotalCount(cri));
		cri.calcData();
		System.out.println(cri);
		return dao.list(cri);
	}
	
	// 자료실 글보기+1증가, 글수정 - 글번호를 받아서 dao 한테 전달
	public DataDTO view(Integer no, boolean isView) {
		System.out.println(getClass().getSimpleName()+".view()");
		// 글보기 할 때 increase 시킨다. 조회수 1증가.
		if(isView) dao.increase(no);
		return dao.view(no);
	}
	
	// 자료실 글쓰기 - DataDTO를 받아서 dao 한테 전달
//	@Transactional
	public void insert(DataDTO dataDTO) {
		System.out.println(getClass().getSimpleName()+".insert()");
		// data DB에 데이터 저장
		dao.insert(dataDTO);
		// data_file DB에 데이터 저장
		if(dataDTO.getSavedFile()!=null && !dataDTO.getSavedFile().equals(""))
			dao.insertFile(dataDTO);
	}
	
	// 자료실 글수정 - BoardDTO를 받아서 dao 한테 전달
	public void update(DataDTO dataDTO) {
		System.out.println(getClass().getSimpleName()+".update()");
		dao.update(dataDTO);
	}
	
	// 자료실 글삭제 - 글번호(no)를 받아서 dao 한테 전달
	public void delete(Integer no) {
		System.out.println(getClass().getSimpleName()+".delete()");
		dao.delete(no);
	}
	
}
