package org.zerock.data.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

// 객체 자동적으로 생성되는 어노테니션
// - @Controller, @Service, @Repository(dao),
//   @Conponent(aop), @RestController(ajax)
@Controller
@RequestMapping("/data")
public class DataController {

	// 자료실 글 리스트
	// return String -> jsp를 직접 지정
	// return을 void로 url안에 마지막 부분이 jsp가 된다.(/data/list.jsp)
	@RequestMapping(value="/list", method= RequestMethod.GET)
	public void list() {
		 System.out.println(getClass().getSimpleName()+".list()");
		 
	}
	
	// 자료실 글보기
	@RequestMapping(value="/view", method= RequestMethod.GET)
	public void view() {
		
	}
	// 자료실 글쓰기 폼
	@RequestMapping(value="/write", method= RequestMethod.GET)
	public void writeForm() {
		
	}
	// 자료실 글쓰기 처리 - 첨부파일이 있다.
	@RequestMapping(value="/write", method= RequestMethod.POST)
	public String write() {
		return "redirect:list";
	}
	
	// ModelAndView 객체를 이용한 jsp forward
	// 자료실 글수정 폼
	@RequestMapping(value="/update", method= RequestMethod.GET)
	public ModelAndView updateForm() {
		ModelAndView mav = new ModelAndView();
		// jsp 셋팅 --> return jsp String;
		mav.setViewName("/data/update");
		// data 셋팅 --> model에 셋팅한 것과 같다.
		mav.addObject("name", "이영환");
		return mav;
	}
	
	// 자료실 글수정 처리
	@RequestMapping(value="/update", method= RequestMethod.POST)
	public String update() {
		return "redirect:view";
	}
	// 자료실 글삭제 처리
	@RequestMapping(value="/delete", method= RequestMethod.GET)
	public String delete() {
		return "redirect:list";
	}
	
}
